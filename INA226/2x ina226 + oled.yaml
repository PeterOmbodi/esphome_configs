esphome:
  name: ups-power-monitoring
  friendly_name: UPS-Power-Monitoring
  min_version: 2024.11.0
  name_add_mac_suffix: false

esp8266:
  board: d1_mini

i2c:
  scan: True

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

sensor:
  - platform: ina226
    address: 0x40
    shunt_resistance: 0.1 ohm
    max_current: 3.2A
    # adc time used for both, Bus Voltage and Shunt Voltage
    adc_time: 140us
    adc_averaging: 128
    update_interval: 1s
    current:
      name: "HAMon Current"
      id: curr
      filters:
        calibrate_linear:
         method: least_squares
         datapoints:
          - -0.129 -> -0.126
          - 0.129 -> 0.126
    power:
      name: "HAMon Power"
      id: inpower
    bus_voltage:
      name: "HAMon Voltage"
      id: busvolt
      force_update: True
      filters:
        calibrate_linear:
         method: least_squares
         datapoints:
          - 12.009 -> 12.016
          - 13.335 -> 13.338
    shunt_voltage:
      id: shuntvol
      name: "HAMon Shunt Voltage"

  - platform: ina226
    address: 0x41
    shunt_resistance: 0.01 ohm
    max_current: 8.192A
    # adc time used for both, Bus Voltage and Shunt Voltage
    adc_time: 140us
    adc_averaging: 128
    update_interval: 1s
    current:
      name: "HAMon Current 2"
      id: curr2
    bus_voltage:
      name: "HAMon Voltage 2"
      id: busvolt2
    shunt_voltage:
      id: shuntvol2
      name: "HAMon Shunt Voltage 2"

font:
	#fonts for text on display
  - file: 'fonts/Roboto-Regular.ttf'
    id: font1
    size: 13

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    contrast: 60%
    reset_pin: D0
    address: 0x3C
    lambda: |-
      if (id(busvolt).has_state()) {
        it.printf(50, 0, id(font1), TextAlign::TOP_LEFT , "%.3f", id(busvolt).state);
        it.printf(105, 0, id(font1), TextAlign::TOP_LEFT , "V");
      }
      if (id(curr).has_state()) {
        it.printf(50, 14, id(font1), TextAlign::TOP_LEFT , "%.3f", id(curr).state);
        it.printf(105, 14, id(font1), TextAlign::TOP_LEFT , "A");
      }
      if (id(busvolt2).has_state()) {
        it.printf(50, 28, id(font1), TextAlign::TOP_LEFT , "%.3f", id(busvolt2).state);
        it.printf(105, 28, id(font1), TextAlign::TOP_LEFT , "V");
      }
      if (id(curr2).has_state()) {
        it.printf(50, 42, id(font1), TextAlign::TOP_LEFT , "%.3f", id(curr2).state);
        it.printf(105, 42, id(font1), TextAlign::TOP_LEFT , "A");
      }